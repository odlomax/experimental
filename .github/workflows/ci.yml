name: CI

on:
  push:
    branches:
      - main
    paths-ignore: 
      - 'docs/**'
  pull_request:
    branches:
      - main
    paths-ignore: 
      - 'docs/**'
jobs:
  build-gcc-with-gcov:
    runs-on: ubuntu-latest
    name: Code coverage with gcov
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake gcc g++ catch2 gcovr
      - name: Configure
        run: cmake -S . -B build -DCMAKE_CXX_COMPILER=g++ -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="--coverage"
      - name: Build
        run: cmake --build build
      - name: Test
        run: cd build && ctest --output-on-failure
      - name: Run gcovr (coverage)
        run: |
          cd build
          gcovr --root .. --filter ../src --filter ../include --html-details coverage.html
      - name: Commit and push code coverage report
        env: 
          CI_COMMIT_MESSAGE: Add code coverage artifacts.
          CI_COMMIT_AUTHOR: CI Bot
        run: |
          mkdir -p docs/coverage
          rm -rf docs/coverage/*
          mv build/coverage.* docs/coverage/
          git config --global user.name "${{ env.CI_COMMIT_AUTHOR }}"
          git config --global user.email "odlomax@users.noreply.github.com"
          git add docs/coverage/*
          git commit -m "${{ env.CI_COMMIT_MESSAGE }}"
          git fetch origin
          git rebase --strategy-option=theirs origin/main
          git push

  build-gcc-debug:
    runs-on: ubuntu-latest
    name: Build and test with GCC (Debug)
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake gcc g++ catch2
      - name: Configure
        run: cmake -S . -B build -DCMAKE_CXX_COMPILER=g++ -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-fsanitize=address,undefined -fno-omit-frame-pointer"
      - name: Build
        run: cmake --build build
      - name: Test
        run: cd build && ctest --output-on-failure

  build-gcc-release:
    runs-on: ubuntu-latest
    name: Build and test with GCC (Release)
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake gcc g++ catch2
      - name: Configure
        run: cmake -S . -B build -DCMAKE_CXX_COMPILER=g++ -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: cmake --build build
      - name: Test
        run: cd build && ctest --output-on-failure


  build-clang-debug:
    runs-on: ubuntu-latest
    name: Build and test with Clang (Debug)
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake clang g++ catch2
      - name: Configure
        run: cmake -S . -B build -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=Debug -DCMAKE_CXX_FLAGS="-fsanitize=address,undefined -fno-omit-frame-pointer"
      - name: Build
        run: cmake --build build
      - name: Test
        run: cd build && ctest --output-on-failure

  build-clang-release:
    runs-on: ubuntu-latest
    name: Build and test with Clang (Release)
    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y cmake clang g++ catch2
      - name: Configure
        run: cmake -S . -B build -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_BUILD_TYPE=Release
      - name: Build
        run: cmake --build build
      - name: Test
        run: cd build && ctest --output-on-failure